Index: src/main/java/neointernship/chess/game/gameplay/loop/GameLoop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package neointernship.chess.game.gameplay.loop;\n\nimport neointernship.chess.game.gameplay.activecolorcontroller.IActiveColorController;\nimport neointernship.chess.game.gameplay.figureactions.IPossibleActionList;\nimport neointernship.chess.game.gameplay.gameprocesscontroller.GameProcessController;\nimport neointernship.chess.game.gameplay.gameprocesscontroller.IGameProcessController;\nimport neointernship.chess.game.gameplay.gamestate.controller.GameStateController;\nimport neointernship.chess.game.gameplay.gamestate.controller.IGameStateController;\nimport neointernship.chess.game.gameplay.gamestate.controller.draw.DrawStateController;\nimport neointernship.chess.game.gameplay.gamestate.state.IGameState;\nimport neointernship.chess.game.gameplay.kingstate.controller.IKingStateController;\nimport neointernship.chess.game.gameplay.kingstate.controller.KingsStateController;\nimport neointernship.chess.game.model.answer.IAnswer;\nimport neointernship.chess.game.model.enums.Color;\nimport neointernship.chess.game.model.mediator.IMediator;\nimport neointernship.chess.game.model.playmap.board.IBoard;\nimport neointernship.chess.game.gameplay.kingstate.subscriber.IKingStateSubscriber;\nimport neointernship.chess.game.story.IStoryGame;\nimport neointernship.web.client.communication.message.TurnStatus;\n\nimport java.util.Collection;\nimport java.util.HashSet;\n\n/**\n * Класс, реализующий основное ядро игры (игровой цикл)\n */\npublic class GameLoop implements IGameLoop {\n    private final IActiveColorController activeColorController;\n\n    private final IGameStateController gameStateController;\n\n    private final IGameProcessController gameProcessController;\n\n    private Color activeColor;\n\n    public GameLoop(final IMediator mediator,\n                    final IPossibleActionList possibleActionList,\n                    final IBoard board,\n                    final IActiveColorController activeColorController,\n                    final IStoryGame storyGame) {\n\n        this.activeColorController = activeColorController;\n\n        gameStateController = new GameStateController(possibleActionList, mediator,storyGame);\n\n        gameProcessController = new GameProcessController(mediator, possibleActionList, board,storyGame);\n    }\n\n    /**\n     * Активация главного игрового цикла.\n     */\n    @Override\n    public TurnStatus doIteration(final IAnswer answer) {\n        activeColor = activeColorController.getCurrentColor();\n\n        gameProcessController.makeTurn(activeColor, answer);\n\n        final TurnStatus turnStatus = gameProcessController.getTurnStatus();\n\n        if(turnStatus != TurnStatus.ERROR) {\n            activeColorController.update();\n            activeColor = activeColorController.getCurrentColor();\n\n            gameStateController.update(activeColor);\n        }\n        return turnStatus;\n    }\n\n    @Override\n    public boolean isAlive() {\n        return gameStateController.isMatchAlive();\n    }\n\n    @Override\n    public IGameState getMatchResult() {\n        return gameStateController.getState();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/neointernship/chess/game/gameplay/loop/GameLoop.java	(revision aa3c0f1d64caac7e3ee4a7dd33cc4261be0c71c2)
+++ src/main/java/neointernship/chess/game/gameplay/loop/GameLoop.java	(date 1595876707068)
@@ -58,7 +58,6 @@
         final TurnStatus turnStatus = gameProcessController.getTurnStatus();
 
         if(turnStatus != TurnStatus.ERROR) {
-            activeColorController.update();
             activeColor = activeColorController.getCurrentColor();
 
             gameStateController.update(activeColor);
